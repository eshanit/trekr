{
  "resolvedId": "C:/Users/Admin/Documents/Projects/Tinashe/trekr/trekr-frontend/node_modules/@ionic/core/components/ion-reorder.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { r as reorderThreeOutline, p as reorderTwoSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { d as defineCustomElement$2 } from './icon.js';\n\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:2.125rem;opacity:0.4}\";\n\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:1.9375rem;opacity:0.3}\";\n\nconst Reorder = /*@__PURE__*/ proxyCustomElement(class Reorder extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n  }\n  onClick(ev) {\n    const reorderGroup = this.el.closest('ion-reorder-group');\n    ev.preventDefault();\n    // Only stop event propagation if the reorder is inside of an enabled\n    // reorder group. This allows interaction with clickable children components.\n    if (!reorderGroup || !reorderGroup.disabled) {\n      ev.stopImmediatePropagation();\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n    return (h(Host, { class: mode }, h(\"slot\", null, h(\"ion-icon\", { icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\", \"aria-hidden\": \"true\" }))));\n  }\n  get el() { return this; }\n  static get style() { return {\n    ios: reorderIosCss,\n    md: reorderMdCss\n  }; }\n}, [33, \"ion-reorder\", undefined, [[2, \"click\", \"onClick\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-reorder\", \"ion-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-reorder\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Reorder);\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonReorder = Reorder;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonReorder, defineCustomElement };\n",
      "start": 1700143041304,
      "end": 1700143041455,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700143041456,
      "end": 1700143041456,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700143041456,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700143041457,
      "end": 1700143041457,
      "order": "normal"
    }
  ]
}
