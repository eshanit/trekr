{
  "resolvedId": "C:/Users/Admin/Documents/Projects/Tinashe/trekr/trekr-frontend/node_modules/@ionic/core/components/hardware-back-button.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * When hardwareBackButton: false in config,\n * we need to make sure we also block the default\n * webview behavior. If we don't then it will be\n * possible for users to navigate backward while\n * an overlay is still open. Additionally, it will\n * give the appearance that the hardwareBackButton\n * config is not working as the page transition\n * will still happen.\n */\nconst blockHardwareBackButton = () => {\n  document.addEventListener('backbutton', () => { }); // eslint-disable-line\n};\nconst startHardwareBackButton = () => {\n  const doc = document;\n  let busy = false;\n  doc.addEventListener('backbutton', () => {\n    if (busy) {\n      return;\n    }\n    let index = 0;\n    let handlers = [];\n    const ev = new CustomEvent('ionBackButton', {\n      bubbles: false,\n      detail: {\n        register(priority, handler) {\n          handlers.push({ priority, handler, id: index++ });\n        },\n      },\n    });\n    doc.dispatchEvent(ev);\n    const executeAction = async (handlerRegister) => {\n      try {\n        if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\n          const result = handlerRegister.handler(processHandlers);\n          if (result != null) {\n            await result;\n          }\n        }\n      }\n      catch (e) {\n        console.error(e);\n      }\n    };\n    const processHandlers = () => {\n      if (handlers.length > 0) {\n        let selectedHandler = {\n          priority: Number.MIN_SAFE_INTEGER,\n          handler: () => undefined,\n          id: -1,\n        };\n        handlers.forEach((handler) => {\n          if (handler.priority >= selectedHandler.priority) {\n            selectedHandler = handler;\n          }\n        });\n        busy = true;\n        handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\n        executeAction(selectedHandler).then(() => (busy = false));\n      }\n    };\n    processHandlers();\n  });\n};\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\n\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };\n",
      "start": 1700143042367,
      "end": 1700143042527,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700143042527,
      "end": 1700143042527,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700143042528,
      "end": 1700143042528,
      "order": "normal"
    }
  ]
}
