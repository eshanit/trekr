{
  "resolvedId": "C:/Users/Admin/Documents/Projects/Tinashe/trekr/trekr-frontend/node_modules/@ionic/core/components/ion-split-pane.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}\";\n\n// TODO(FW-2832): types\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  xs: '(min-width: 0px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  never: '',\n};\nconst SplitPane = /*@__PURE__*/ proxyCustomElement(class SplitPane extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    this.contentId = undefined;\n    this.disabled = false;\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    const detail = { visible, isPane: this.isPane.bind(this) };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined' && customElements != null) {\n      await customElements.whenDefined('ion-split-pane');\n    }\n    this.styleChildren();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (!Build.isBrowser) {\n      return;\n    }\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = (q) => {\n        this.visible = q.matches;\n      };\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n      this.rmL = () => mediaList.removeListener(callback);\n      this.visible = mediaList.matches;\n    }\n  }\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n  styleChildren() {\n    if (!Build.isBrowser) {\n      return;\n    }\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n        foundMain = true;\n      }\n      setPaneClass(child, isMain);\n    }\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible,\n      } }, h(\"slot\", null)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"visible\": [\"visibleChanged\"],\n    \"disabled\": [\"updateState\"],\n    \"when\": [\"updateState\"]\n  }; }\n  static get style() { return {\n    ios: splitPaneIosCss,\n    md: splitPaneMdCss\n  }; }\n}, [33, \"ion-split-pane\", {\n    \"contentId\": [513, \"content-id\"],\n    \"disabled\": [4],\n    \"when\": [8],\n    \"visible\": [32]\n  }, undefined, {\n    \"visible\": [\"visibleChanged\"],\n    \"disabled\": [\"updateState\"],\n    \"when\": [\"updateState\"]\n  }]);\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  }\n  else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-split-pane\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-split-pane\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, SplitPane);\n      }\n      break;\n  } });\n}\n\nconst IonSplitPane = SplitPane;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonSplitPane, defineCustomElement };\n",
      "start": 1700143041371,
      "end": 1700143041549,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700143041549,
      "end": 1700143041549,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700143041549,
      "end": 1700143041549,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700143041549,
      "end": 1700143041549,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700143041549,
      "end": 1700143041549,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700143041550,
      "end": 1700143041550,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700143041550,
      "end": 1700143041551,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700143041551,
      "end": 1700143041551,
      "order": "normal"
    }
  ]
}
