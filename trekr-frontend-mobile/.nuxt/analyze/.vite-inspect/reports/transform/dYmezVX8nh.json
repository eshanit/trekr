{
  "resolvedId": "C:/Users/Admin/Documents/Projects/Tinashe/trekr/trekr-frontend/node_modules/@ionic/core/components/backdrop.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst Backdrop = /*@__PURE__*/ proxyCustomElement(class Backdrop extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true,\n    });\n    this.visible = true;\n    this.tappable = true;\n    this.stopPropagation = true;\n  }\n  connectedCallback() {\n    if (this.stopPropagation) {\n      this.blocker.block();\n    }\n  }\n  disconnectedCallback() {\n    this.blocker.unblock();\n  }\n  onMouseDown(ev) {\n    this.emitTap(ev);\n  }\n  emitTap(ev) {\n    if (this.stopPropagation) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n    if (this.tappable) {\n      this.ionBackdropTap.emit();\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { tabindex: \"-1\", \"aria-hidden\": \"true\", class: {\n        [mode]: true,\n        'backdrop-hide': !this.visible,\n        'backdrop-no-tappable': !this.tappable,\n      } }));\n  }\n  static get style() { return {\n    ios: backdropIosCss,\n    md: backdropMdCss\n  }; }\n}, [33, \"ion-backdrop\", {\n    \"visible\": [4],\n    \"tappable\": [4],\n    \"stopPropagation\": [4, \"stop-propagation\"]\n  }, [[2, \"click\", \"onMouseDown\"]]]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-backdrop\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Backdrop);\n      }\n      break;\n  } });\n}\n\nexport { Backdrop as B, defineCustomElement as d };\n",
      "start": 1700143042044,
      "end": 1700143042177,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700143042177,
      "end": 1700143042177,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700143042178,
      "end": 1700143042178,
      "order": "normal"
    }
  ]
}
