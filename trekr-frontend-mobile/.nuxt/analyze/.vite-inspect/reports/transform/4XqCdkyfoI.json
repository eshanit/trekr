{
  "resolvedId": "C:/Users/Admin/Documents/Projects/Tinashe/trekr/trekr-frontend/node_modules/@ionic/core/components/form-controller.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { k as findItemLabel } from './helpers.js';\n\n/**\n * Creates a controller that tracks whether a form control is using the legacy or modern syntax. This should be removed when the legacy form control syntax is removed.\n *\n * @internal\n * @prop el: The Ionic form component to reference\n */\nconst createLegacyFormController = (el) => {\n  const controlEl = el;\n  let legacyControl;\n  const hasLegacyControl = () => {\n    if (legacyControl === undefined) {\n      /**\n       * Detect if developers are using the legacy form control syntax\n       * so a deprecation warning is logged. This warning can be disabled\n       * by either using the new `label` property or setting `aria-label`\n       * on the control.\n       * Alternatively, components that use a slot for the label\n       * can check to see if the component has slotted text\n       * in the light DOM.\n       */\n      const hasLabelProp = controlEl.label !== undefined || hasLabelSlot(controlEl);\n      const hasAriaLabelAttribute = controlEl.hasAttribute('aria-label') ||\n        // Shadow DOM form controls cannot use aria-labelledby\n        (controlEl.hasAttribute('aria-labelledby') && controlEl.shadowRoot === null);\n      const legacyItemLabel = findItemLabel(controlEl);\n      /**\n       * Developers can manually opt-out of the modern form markup\n       * by setting `legacy=\"true\"` on components.\n       */\n      legacyControl =\n        controlEl.legacy === true || (!hasLabelProp && !hasAriaLabelAttribute && legacyItemLabel !== null);\n    }\n    return legacyControl;\n  };\n  return { hasLegacyControl };\n};\nconst hasLabelSlot = (controlEl) => {\n  /**\n   * Components that have a named label slot\n   * also have other slots, so we need to query for\n   * anything that is explicitly passed to slot=\"label\"\n   */\n  if (NAMED_LABEL_SLOT_COMPONENTS.includes(controlEl.tagName) && controlEl.querySelector('[slot=\"label\"]') !== null) {\n    return true;\n  }\n  /**\n   * Components that have an unnamed slot for the label\n   * have no other slots, so we can check the textContent\n   * of the element.\n   */\n  if (UNNAMED_LABEL_SLOT_COMPONENTS.includes(controlEl.tagName) && controlEl.textContent !== '') {\n    return true;\n  }\n  return false;\n};\nconst NAMED_LABEL_SLOT_COMPONENTS = ['ION-INPUT', 'ION-TEXTAREA', 'ION-SELECT', 'ION-RANGE'];\nconst UNNAMED_LABEL_SLOT_COMPONENTS = ['ION-TOGGLE', 'ION-CHECKBOX', 'ION-RADIO'];\n\nexport { createLegacyFormController as c };\n",
      "start": 1700143042168,
      "end": 1700143042315,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700143042315,
      "end": 1700143042315,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700143042315,
      "end": 1700143042315,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700143042315,
      "end": 1700143042315,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700143042315,
      "end": 1700143042315,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700143042315,
      "end": 1700143042315,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700143042319,
      "end": 1700143042319,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700143042319,
      "end": 1700143042320,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700143042320,
      "end": 1700143042320,
      "order": "normal"
    }
  ]
}
