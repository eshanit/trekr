{
  "resolvedId": "C:/Users/Admin/Documents/Projects/Tinashe/trekr/trekr-frontend/node_modules/@ionic/core/components/keyboard.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getCapacitor } from './capacitor.js';\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n  /**\n   * API is not implemented.\n   *\n   * This usually means the API can't be used because it is not implemented for\n   * the current platform.\n   */\n  ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n  /**\n   * API is not available.\n   *\n   * This means the API can't be used right now because:\n   *   - it is currently missing a prerequisite, such as network connectivity\n   *   - it requires a particular platform or browser version\n   */\n  ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\n\nvar KeyboardResize;\n(function (KeyboardResize) {\n  /**\n   * Only the `body` HTML element will be resized.\n   * Relative units are not affected, because the viewport does not change.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Body\"] = \"body\";\n  /**\n   * Only the `ion-app` HTML element will be resized.\n   * Use it only for Ionic Framework apps.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Ionic\"] = \"ionic\";\n  /**\n   * The whole native Web View will be resized when the keyboard shows/hides.\n   * This affects the `vh` relative unit.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"Native\"] = \"native\";\n  /**\n   * Neither the app nor the Web View are resized.\n   *\n   * @since 1.0.0\n   */\n  KeyboardResize[\"None\"] = \"none\";\n})(KeyboardResize || (KeyboardResize = {}));\nconst Keyboard = {\n  getEngine() {\n    const capacitor = getCapacitor();\n    if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Keyboard')) {\n      return capacitor.Plugins.Keyboard;\n    }\n    return undefined;\n  },\n  getResizeMode() {\n    const engine = this.getEngine();\n    if (!(engine === null || engine === void 0 ? void 0 : engine.getResizeMode)) {\n      return Promise.resolve(undefined);\n    }\n    return engine.getResizeMode().catch((e) => {\n      if (e.code === ExceptionCode.Unimplemented) {\n        // If the native implementation is not available\n        // we treat it the same as if the plugin is not available.\n        return undefined;\n      }\n      throw e;\n    });\n  },\n};\n\nexport { Keyboard as K, KeyboardResize as a };\n",
      "start": 1700143042519,
      "end": 1700143042627,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700143042627,
      "end": 1700143042627,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700143042628,
      "end": 1700143042628,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700143042629,
      "end": 1700143042629,
      "order": "normal"
    }
  ]
}
